openapi: 3.0.1
info:
  title: Banking System -Transaction Microservice
  description: API to manage bank transactions (deposits, withdrawals, and transfers) and query transaction history.
  contact:
    name: Alessandra Godoy
    email: api@alessandragodoy.com
  version: 1.0.0
servers:
  - url: http://localhost:8088
    description: Local server

paths:
  /api/v1/transactions/deposit:
    post:
      summary: Register a deposit
      operationId: deposit
      tags:
        - Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositRequestDTO'
      responses:
        201:
          description: Deposit successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponseDTO'
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundException'

  /api/v1/transactions/withdraw:
    post:
      summary: Register a withdrawal
      operationId: withdraw
      tags:
        - Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawalRequestDTO'
      responses:
        201:
          description: Withdrawal successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponseDTO'
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundException'

  /api/v1/transactions/transfer:
    post:
      summary: Register a transfer
      operationId: transfer
      tags:
        - Transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequestDTO'
      responses:
        201:
          description: Transfer successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponseDTO'
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundException'

  /api/v1/transactions:
    get:
      summary: Query transaction history
      operationId: history
      tags:
        - Transaction
      parameters:
        - name: account
          in: query
          required: true
          schema:
            type: string
          description: Account number for which the history is queried
      responses:
        200:
          description: Transaction history successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionResponseDTO'
        404:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundException'

components:
  schemas:
    DepositRequestDTO:
      type: object
      properties:
        account:
          type: string
          description: Account to which the deposit will be applied
          example: "A-12345678912"
        amount:
          type: number
          format: double
          description: Deposit amount
          example: 500.0
      required:
        - account
        - amount

    WithdrawalRequestDTO:
      type: object
      properties:
        account:
          type: string
          description: Account from which the withdrawal will be made
          example: "A-12345678912"
        amount:
          type: number
          format: double
          description: Withdrawal amount
          example: 100.10
      required:
        - account
        - amount

    TransferRequestDTO:
      type: object
      properties:
        sourceAccount:
          type: string
          description: Account from which the transfer will be made
          example: "A-12345678912"
        targetAccount:
          type: string
          description: Destination account for the transfer
          example: "A-12345678908"
        amount:
          type: number
          format: double
          description: Transfer amount
          example: 100.00
      required:
        - sourceAccount
        - targetAccount
        - amount

    TransactionResponseDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the transaction
          example: "673807e816b72c3e758df547"
        type:
          type: string
          enum: [ DEPOSIT, WITHDRAWAL, TRANSFER ]
          description: Type of transaction
        account:
          type: string
          description: Account associated with the transaction
          example: "A-12345678912"
        targetAccount:
          type: string
          description: Destination account for transfers
          example: "A-12345678912"
        amount:
          type: number
          format: double
          description: Transaction amount
          example: 1000.0
        date:
          type: string
          format: date-time
          description: Date of the transaction
      required:
        - id
        - type
        - account
        - amount
        - date

    AccountNotFoundException:
      type: object
      properties:
        message:
          type: string
          description: A human-readable message describing the error
          example: "The specified account could not be found."
